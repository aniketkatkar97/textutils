{"version":3,"sources":["Navbar.js","TextForm.js","About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","onClick","toggleMode","htmlFor","TextForm","txtl","useState","text","setText","textLength","setTextLength","outputValue","setOutputvalue","pasteFromClipboard","a","navigator","clipboard","readText","heading","rows","value","onChange","e","target","trim","split","at","length","style","backgroundColor","color","toUpperCase","toLowerCase","reverse","join","console","log","disabled","writeText","About","aria-labelledby","data-bs-parent","App","setmode","title","document","body","exact","path","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a72c1b98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            TextUtils\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li> */}\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About TextUtils\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"dark\" ? \"light\" : \"dark\"\r\n              }`}\r\n            >\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                DarkMode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  let txtl;\r\n  let [text, setText] = useState(\"\");\r\n  let [textLength, setTextLength] = useState(0);\r\n  let [outputValue, setOutputvalue] = useState();\r\n\r\n  const onChangeEvent = (e) => {\r\n    setText(e.target.value);\r\n    setOutputvalue(e.target.value);\r\n    txtl = e.target.value.trim().split(\" \");\r\n    if (txtl.at(-1) === \"\") {\r\n      setTextLength(txtl.length - 1);\r\n    } else {\r\n      setTextLength(txtl.length);\r\n    }\r\n  };\r\n\r\n  const upperCase = () => {\r\n    setOutputvalue(text.toUpperCase());\r\n  };\r\n\r\n  const lowerCase = () => {\r\n    setOutputvalue(text.toLowerCase());\r\n  };\r\n\r\n  const clearText = () => {\r\n    setText(\"\");\r\n    setTextLength(0);\r\n    setOutputvalue(\"\");\r\n  };\r\n\r\n  const reverseText = () => {\r\n    txtl = text.trim().split(\"\").reverse().join(\"\");\r\n    console.log(txtl);\r\n    setOutputvalue(txtl);\r\n  };\r\n\r\n  const reverseOrder = () => {\r\n    txtl = text.trim().split(\" \").reverse().join(\" \");\r\n    setOutputvalue(txtl);\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(outputValue);\r\n  };\r\n\r\n  const pasteFromClipboard = async () => {\r\n    txtl = await navigator.clipboard.readText();\r\n    setText(txtl);\r\n  };\r\n\r\n  const removeExtraSpace = () => {\r\n    txtl = text.split(/[ ]+/g);\r\n    setOutputvalue(txtl.join(\" \"));\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className={`container my-2 text-${\r\n          props.mode === \"dark\" ? \"white\" : \"#4e4b4b\"\r\n        }`}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            rows=\"6\"\r\n            value={text}\r\n            onChange={onChangeEvent}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#4e4b4b\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#4e4b4b\",\r\n            }}\r\n          ></textarea>\r\n          <button className=\"btn btn-primary mx-1 my-2\" onClick={clearText}>\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mx-1 my-2\"\r\n            onClick={pasteFromClipboard}\r\n          >\r\n            Paste\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-2\" onClick={upperCase}>\r\n            Convert to Uppercase\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-2\" onClick={lowerCase}>\r\n            Convert to Lowercase\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-2\" onClick={reverseText}>\r\n            Text Reverse\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1 my-2\" onClick={reverseOrder}>\r\n            Words in reverse\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary mx-1 my-2\"\r\n            onClick={removeExtraSpace}\r\n          >\r\n            Remove Extra Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`container my-2 text-${\r\n          props.mode === \"dark\" ? \"white\" : \"#4e4b4b\"\r\n        }`}\r\n      >\r\n        <p>\r\n          words : {textLength} | characters : {text.length} | approximate\r\n          reading time : {0.008 * textLength} minutes\r\n        </p>\r\n        <h4>Preview : </h4>\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"6\"\r\n          value={outputValue}\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#4e4b4b\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"#4e4b4b\",\r\n          }}\r\n          disabled\r\n        ></textarea>\r\n        <button className=\"btn btn-primary mx-1 my-2\" onClick={copyToClipboard}>\r\n          Copy\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction About(props) {\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"accordion\"\r\n        id=\"accordionExample\"\r\n        style={{\r\n          backgroundColor: props.mode === \"dark\" ? \"#4e4b4b\" : \"white\",\r\n          color: props.mode === \"dark\" ? \"white\" : \"#4e4b4b\",\r\n        }}\r\n      >\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={{\r\n                backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"#f8f9fa\",\r\n                color: props.mode === \"dark\" ? \"white\" : \"#4e4b4b\",\r\n              }}\r\n            >\r\n              About\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#4e4b4b\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#4e4b4b\",\r\n            }}\r\n          >\r\n            <div className=\"accordion-body\">\r\n              This is an utility app, which takes a text input from users and\r\n              performs shown operations on the given text. It also shows the\r\n              result of the operation where user can copy the result. <br />{\" \"}\r\n              <strong>User can also switch between dark and light UI.</strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import Navbar from \"./Navbar\";\nimport TextForm from \"./TextForm\";\nimport About from \"./About\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#4e4b4b\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm heading=\"Enter Text here :\" mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}